{"remainingRequest":"/Users/mmcallen/Documents/03_Other/01_Dev_work/01_Dev_tutorials/20_ripple_2/vue-boilerplate/node_modules/babel-loader/lib/index.js!/Users/mmcallen/Documents/03_Other/01_Dev_work/01_Dev_tutorials/20_ripple_2/vue-boilerplate/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mmcallen/Documents/03_Other/01_Dev_work/01_Dev_tutorials/20_ripple_2/vue-boilerplate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mmcallen/Documents/03_Other/01_Dev_work/01_Dev_tutorials/20_ripple_2/vue-boilerplate/src/components/Scene.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mmcallen/Documents/03_Other/01_Dev_work/01_Dev_tutorials/20_ripple_2/vue-boilerplate/src/components/Scene.vue","mtime":1601892687691},{"path":"/Users/mmcallen/Documents/03_Other/01_Dev_work/01_Dev_tutorials/20_ripple_2/vue-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mmcallen/Documents/03_Other/01_Dev_work/01_Dev_tutorials/20_ripple_2/vue-boilerplate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mmcallen/Documents/03_Other/01_Dev_work/01_Dev_tutorials/20_ripple_2/vue-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mmcallen/Documents/03_Other/01_Dev_work/01_Dev_tutorials/20_ripple_2/vue-boilerplate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnOwppbXBvcnQgeyBPcmJpdENvbnRyb2xzIH0gZnJvbSAndGhyZWUvZXhhbXBsZXMvanNtL2NvbnRyb2xzL09yYml0Q29udHJvbHMnOwppbXBvcnQgV0VCR0wgZnJvbSAnLi4vbWl4aW5zL3dlYmdsJzsKdmFyIGNvbnRhaW5lcjsKdmFyIGNhbWVyYTsKdmFyIHJlbmRlcmVyOwp2YXIgc2NlbmU7CnZhciBtYWluTGlnaHQ7CnZhciBhbWJpZW50TGlnaHQ7CnZhciBjb250cm9sczsKdmFyIG1hdGVyaWFsczsKdmFyIGdlb21ldHJpZXM7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU2NlbmUnLAogIGNvbXBvbmVudHM6IHt9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmJpbmRFdmVudHMoKTsKICAgIHRoaXMuaW5pdGlhbGlzZVNjZW5lKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0aWFsaXNlU2NlbmU6IGZ1bmN0aW9uIGluaXRpYWxpc2VTY2VuZSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzY2VuZS1jb250YWluZXInKTsKICAgICAgc2NlbmUgPSBuZXcgVEhSRUUuU2NlbmUoKTsKICAgICAgc2NlbmUuYmFja2dyb3VuZCA9IG5ldyBUSFJFRS5Db2xvcignc2t5Ymx1ZScpOwogICAgICB0aGlzLmNyZWF0ZUNhbWVyYSgpOwogICAgICB0aGlzLmNyZWF0ZUxpZ2h0cygpOwogICAgICB0aGlzLmNyZWF0ZU1lc2hlcygpOwogICAgICB0aGlzLmNyZWF0ZVJlbmRlcmVyKCk7CiAgICAgIHRoaXMuY3JlYXRlQ29udHJvbHMoKTsKCiAgICAgIGlmIChXRUJHTC5pc1dlYkdMQXZhaWxhYmxlKCkpIHsKICAgICAgICByZW5kZXJlci5zZXRBbmltYXRpb25Mb29wKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF90aGlzLnVwZGF0ZSgpOwoKICAgICAgICAgIF90aGlzLnJlbmRlcigpOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHZhciB3YXJuaW5nID0gV0VCR0wuZ2V0V2ViR0xFcnJvck1lc3NhZ2UoKTsKICAgICAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQod2FybmluZyk7CiAgICAgIH0KICAgIH0sCiAgICBjcmVhdGVDYW1lcmE6IGZ1bmN0aW9uIGNyZWF0ZUNhbWVyYSgpIHsKICAgICAgdmFyIGZvdiA9IDM1OyAvLyBBS0EgRmllbGQgb2YgVmlldwoKICAgICAgdmFyIGFzcGVjdCA9IGNvbnRhaW5lci5jbGllbnRXaWR0aCAvIGNvbnRhaW5lci5jbGllbnRIZWlnaHQ7CiAgICAgIHZhciBuZWFyID0gMC4xOyAvLyB0aGUgbmVhciBjbGlwcGluZyBwbGFuZQoKICAgICAgdmFyIGZhciA9IDEwMDsgLy8gdGhlIGZhciBjbGlwcGluZyBwbGFuZQoKICAgICAgY2FtZXJhID0gbmV3IFRIUkVFLlBlcnNwZWN0aXZlQ2FtZXJhKGZvdiwgYXNwZWN0LCBuZWFyLCBmYXIpOwogICAgICBjYW1lcmEucG9zaXRpb24uc2V0KC01LCA1LCA3KTsKICAgIH0sCiAgICBjcmVhdGVMaWdodHM6IGZ1bmN0aW9uIGNyZWF0ZUxpZ2h0cygpIHsKICAgICAgYW1iaWVudExpZ2h0ID0gbmV3IFRIUkVFLkhlbWlzcGhlcmVMaWdodCgweGRkZWVmZiwgLy8gc2t5IGNvbG9yCiAgICAgIDB4MjAyMDIwLCAvLyBncm91bmQgY29sb3IKICAgICAgMC41KTsKICAgICAgbWFpbkxpZ2h0ID0gbmV3IFRIUkVFLkRpcmVjdGlvbmFsTGlnaHQoMHhmZmZmZmYsIDMpOwogICAgICBtYWluTGlnaHQucG9zaXRpb24uc2V0KDEwLCAxMCwgMTApOwogICAgICBzY2VuZS5hZGQoYW1iaWVudExpZ2h0LCBtYWluTGlnaHQpOwogICAgfSwKICAgIGNyZWF0ZU1lc2hlczogZnVuY3Rpb24gY3JlYXRlTWVzaGVzKCkgewogICAgICBtYXRlcmlhbHMgPSB0aGlzLmNyZWF0ZU1hdGVyaWFscygpOwogICAgICBnZW9tZXRyaWVzID0gdGhpcy5jcmVhdGVHZW9tZXRyaWVzKCk7CiAgICAgIHZhciB0cmFpbiA9IG5ldyBUSFJFRS5Hcm91cCgpOwogICAgICBzY2VuZS5hZGQodHJhaW4pOwogICAgICB2YXIgbm9zZSA9IG5ldyBUSFJFRS5NZXNoKGdlb21ldHJpZXMubm9zZSwgbWF0ZXJpYWxzLmJvZHkpOwogICAgICBub3NlLnJvdGF0aW9uLnogPSBNYXRoLlBJIC8gMjsKICAgICAgbm9zZS5wb3NpdGlvbi54ID0gLTE7CiAgICAgIHZhciBjYWJpbiA9IG5ldyBUSFJFRS5NZXNoKGdlb21ldHJpZXMuY2FiaW4sIG1hdGVyaWFscy5ib2R5KTsKICAgICAgY2FiaW4ucG9zaXRpb24uc2V0KDEuNSwgMC40LCAwKTsKICAgICAgdmFyIGNoaW1uZXkgPSBuZXcgVEhSRUUuTWVzaChnZW9tZXRyaWVzLmNoaW1uZXksIG1hdGVyaWFscy5kZXRhaWwpOwogICAgICBjaGltbmV5LnBvc2l0aW9uLnNldCgtMiwgMC45LCAwKTsKICAgICAgdmFyIHNtYWxsV2hlZWxSZWFyID0gbmV3IFRIUkVFLk1lc2goZ2VvbWV0cmllcy53aGVlbCwgbWF0ZXJpYWxzLmRldGFpbCk7CiAgICAgIHNtYWxsV2hlZWxSZWFyLnBvc2l0aW9uLnNldCgwLCAtMC41LCAwKTsKICAgICAgdmFyIHNtYWxsV2hlZWxDZW50ZXIgPSBzbWFsbFdoZWVsUmVhci5jbG9uZSgpOwogICAgICBzbWFsbFdoZWVsQ2VudGVyLnBvc2l0aW9uLnggPSAtMTsKICAgICAgdmFyIHNtYWxsV2hlZWxGcm9udCA9IHNtYWxsV2hlZWxSZWFyLmNsb25lKCk7CiAgICAgIHNtYWxsV2hlZWxGcm9udC5wb3NpdGlvbi54ID0gLTI7CiAgICAgIHZhciBiaWdXaGVlbCA9IHNtYWxsV2hlZWxSZWFyLmNsb25lKCk7CiAgICAgIGJpZ1doZWVsLnNjYWxlLnNldCgyLCAyLCAxLjI1KTsKICAgICAgYmlnV2hlZWwucG9zaXRpb24uc2V0KDEuNSwgLTAuMSwgMCk7CiAgICAgIHRyYWluLmFkZChub3NlLCBjYWJpbiwgY2hpbW5leSwgc21hbGxXaGVlbFJlYXIsIHNtYWxsV2hlZWxDZW50ZXIsIHNtYWxsV2hlZWxGcm9udCwgYmlnV2hlZWwpOwogICAgfSwKICAgIGNyZWF0ZUdlb21ldHJpZXM6IGZ1bmN0aW9uIGNyZWF0ZUdlb21ldHJpZXMoKSB7CiAgICAgIHZhciBub3NlID0gbmV3IFRIUkVFLkN5bGluZGVyQnVmZmVyR2VvbWV0cnkoMC43NSwgMC43NSwgMywgNjApOwogICAgICB2YXIgY2FiaW4gPSBuZXcgVEhSRUUuQm94QnVmZmVyR2VvbWV0cnkoMiwgMi4yNSwgMS41KTsKICAgICAgdmFyIGNoaW1uZXkgPSBuZXcgVEhSRUUuQ3lsaW5kZXJCdWZmZXJHZW9tZXRyeSgwLjMsIDAuMSwgMC41LCAyMCk7CiAgICAgIHZhciB3aGVlbCA9IG5ldyBUSFJFRS5DeWxpbmRlckJ1ZmZlckdlb21ldHJ5KDAuNCwgMC40LCAxLjc1LCA2MCk7CiAgICAgIHdoZWVsLnJvdGF0ZVgoTWF0aC5QSSAvIDIpOwogICAgICByZXR1cm4gewogICAgICAgIG5vc2U6IG5vc2UsCiAgICAgICAgY2FiaW46IGNhYmluLAogICAgICAgIGNoaW1uZXk6IGNoaW1uZXksCiAgICAgICAgd2hlZWw6IHdoZWVsCiAgICAgIH07CiAgICB9LAogICAgY3JlYXRlTWF0ZXJpYWxzOiBmdW5jdGlvbiBjcmVhdGVNYXRlcmlhbHMoKSB7CiAgICAgIHZhciBib2R5ID0gbmV3IFRIUkVFLk1lc2hTdGFuZGFyZE1hdGVyaWFsKHsKICAgICAgICBjb2xvcjogMHhmZjMzMzMsCiAgICAgICAgLy8gcmVkCiAgICAgICAgZmxhdFNoYWRpbmc6IHRydWUKICAgICAgfSk7CiAgICAgIGJvZHkuY29sb3IuY29udmVydFNSR0JUb0xpbmVhcigpOwogICAgICB2YXIgZGV0YWlsID0gbmV3IFRIUkVFLk1lc2hTdGFuZGFyZE1hdGVyaWFsKHsKICAgICAgICBjb2xvcjogMHgzMzMzMzMsCiAgICAgICAgLy8gZGFya2dyZXkKICAgICAgICBmbGF0U2hhZGluZzogdHJ1ZQogICAgICB9KTsKICAgICAgZGV0YWlsLmNvbG9yLmNvbnZlcnRTUkdCVG9MaW5lYXIoKTsKICAgICAgcmV0dXJuIHsKICAgICAgICBib2R5OiBib2R5LAogICAgICAgIGRldGFpbDogZGV0YWlsCiAgICAgIH07CiAgICB9LAogICAgY3JlYXRlUmVuZGVyZXI6IGZ1bmN0aW9uIGNyZWF0ZVJlbmRlcmVyKCkgewogICAgICByZW5kZXJlciA9IG5ldyBUSFJFRS5XZWJHTFJlbmRlcmVyKHsKICAgICAgICBhbnRpYWxpYXM6IHRydWUKICAgICAgfSk7CiAgICAgIHJlbmRlcmVyLnNldFNpemUoY29udGFpbmVyLmNsaWVudFdpZHRoLCBjb250YWluZXIuY2xpZW50SGVpZ2h0KTsKICAgICAgcmVuZGVyZXIuc2V0UGl4ZWxSYXRpbyh3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbyk7CiAgICAgIHJlbmRlcmVyLmdhbW1hRmFjdG9yID0gMi4yOwogICAgICByZW5kZXJlci5nYW1tYU91dHB1dCA9IHRydWU7CiAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChyZW5kZXJlci5kb21FbGVtZW50KTsKICAgIH0sCiAgICBjcmVhdGVDb250cm9sczogZnVuY3Rpb24gY3JlYXRlQ29udHJvbHMoKSB7CiAgICAgIGNvbnRyb2xzID0gbmV3IE9yYml0Q29udHJvbHMoY2FtZXJhLCBjb250YWluZXIpOwogICAgICBjb25zb2xlLmxvZyhjb250cm9scyk7CiAgICB9LAogICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSwKICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgICByZW5kZXJlci5yZW5kZXIoc2NlbmUsIGNhbWVyYSk7CiAgICB9LAogICAgYmluZEV2ZW50czogZnVuY3Rpb24gYmluZEV2ZW50cygpIHsKICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMub25XaW5kb3dSZXNpemUsIGZhbHNlKTsKICAgIH0sCiAgICBvbldpbmRvd1Jlc2l6ZTogZnVuY3Rpb24gb25XaW5kb3dSZXNpemUoKSB7CiAgICAgIGNhbWVyYS5hc3BlY3QgPSBjb250YWluZXIuY2xpZW50V2lkdGggLyBjb250YWluZXIuY2xpZW50SGVpZ2h0OyAvLyB1cGRhdGUgdGhlIGNhbWVyYSdzIGZydXN0dW0KCiAgICAgIGNhbWVyYS51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCk7CiAgICAgIHJlbmRlcmVyLnNldFNpemUoY29udGFpbmVyLmNsaWVudFdpZHRoLCBjb250YWluZXIuY2xpZW50SGVpZ2h0KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Scene.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id=\"scene-container\">\n    </div>\n</template>\n\n<script>\n    import * as THREE from 'three';\n    import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n    import WEBGL from '../mixins/webgl';\n\n    let container;\n    let camera;\n    let renderer;\n    let scene;\n    let mainLight;\n    let ambientLight;\n    let controls;\n    let materials;\n    let geometries;\n\n    export default {\n        name: 'Scene',\n        components: {},\n        mounted() {\n            this.bindEvents();\n            this.initialiseScene();\n        },\n        methods: {\n            initialiseScene() {\n                container = document.querySelector('#scene-container');\n                scene = new THREE.Scene();\n                scene.background = new THREE.Color('skyblue');\n\n                this.createCamera();\n                this.createLights();\n                this.createMeshes();\n                this.createRenderer();\n                this.createControls();\n\n                if (WEBGL.isWebGLAvailable()) {\n                    renderer.setAnimationLoop(() => {\n                        this.update();\n                        this.render();\n                    });\n                } else {\n                    const warning = WEBGL.getWebGLErrorMessage();\n                    container.appendChild(warning);\n                }\n            },\n            createCamera() {\n                const fov = 35; // AKA Field of View\n                const aspect = container.clientWidth / container.clientHeight;\n                const near = 0.1; // the near clipping plane\n                const far = 100; // the far clipping plane\n                camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n                camera.position.set(-5, 5, 7);\n            },\n            createLights() {\n                ambientLight = new THREE.HemisphereLight(\n                    0xddeeff, // sky color\n                    0x202020, // ground color\n                    0.5, // intensity\n                );\n\n                mainLight = new THREE.DirectionalLight(0xffffff, 3);\n                mainLight.position.set(10, 10, 10);\n\n                scene.add(ambientLight, mainLight);\n            },\n            createMeshes() {\n                materials = this.createMaterials();\n                geometries = this.createGeometries();\n                const train = new THREE.Group();\n                scene.add(train);\n\n                const nose = new THREE.Mesh(geometries.nose, materials.body);\n                nose.rotation.z = Math.PI / 2;\n                nose.position.x = -1;\n\n                const cabin = new THREE.Mesh(geometries.cabin, materials.body);\n                cabin.position.set(1.5, 0.4, 0);\n\n                const chimney = new THREE.Mesh(geometries.chimney, materials.detail);\n                chimney.position.set(-2, 0.9, 0);\n\n                const smallWheelRear = new THREE.Mesh(geometries.wheel, materials.detail);\n                smallWheelRear.position.set(0, -0.5, 0);\n\n                const smallWheelCenter = smallWheelRear.clone();\n                smallWheelCenter.position.x = -1;\n\n                const smallWheelFront = smallWheelRear.clone();\n                smallWheelFront.position.x = -2;\n\n                const bigWheel = smallWheelRear.clone();\n                bigWheel.scale.set(2, 2, 1.25);\n                bigWheel.position.set(1.5, -0.1, 0);\n\n                train.add(\n                    nose,\n                    cabin,\n                    chimney,\n                    smallWheelRear,\n                    smallWheelCenter,\n                    smallWheelFront,\n                    bigWheel,\n                );\n            },\n            createGeometries() {\n                const nose = new THREE.CylinderBufferGeometry(0.75, 0.75, 3, 60);\n                const cabin = new THREE.BoxBufferGeometry(2, 2.25, 1.5);\n                const chimney = new THREE.CylinderBufferGeometry(0.3, 0.1, 0.5, 20);\n                const wheel = new THREE.CylinderBufferGeometry(0.4, 0.4, 1.75, 60);\n                wheel.rotateX(Math.PI / 2);\n\n                return {\n                    nose, cabin, chimney, wheel,\n                };\n            },\n            createMaterials() {\n                const body = new THREE.MeshStandardMaterial({\n                    color: 0xff3333, // red\n                    flatShading: true,\n                });\n                body.color.convertSRGBToLinear();\n\n                const detail = new THREE.MeshStandardMaterial({\n                    color: 0x333333, // darkgrey\n                    flatShading: true,\n                });\n                detail.color.convertSRGBToLinear();\n\n                return {\n                    body,\n                    detail,\n                };\n            },\n            createRenderer() {\n                renderer = new THREE.WebGLRenderer({ antialias: true });\n                renderer.setSize(container.clientWidth, container.clientHeight);\n                renderer.setPixelRatio(window.devicePixelRatio);\n                renderer.gammaFactor = 2.2;\n                renderer.gammaOutput = true;\n                container.appendChild(renderer.domElement);\n            },\n            createControls() {\n                controls = new OrbitControls(camera, container);\n                console.log(controls);\n            },\n            update() {\n\n            },\n            render() {\n                renderer.render(scene, camera);\n            },\n            bindEvents() {\n                window.addEventListener('resize', this.onWindowResize, false);\n            },\n            onWindowResize() {\n                camera.aspect = container.clientWidth / container.clientHeight;\n                // update the camera's frustum\n                camera.updateProjectionMatrix();\n                renderer.setSize(container.clientWidth, container.clientHeight);\n            },\n        },\n\n    };\n</script>\n\n<style lang=\"scss\">\n    #scene-container {\n        font-family: Avenir, Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        text-align: center;\n        color: #2c3e50;\n        margin-top: 0;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n    }\n\n    #info {\n        position: absolute;\n        top: 10px;\n        width: 100%;\n        text-align: center;\n        z-index: 100;\n        display:block;\n    }\n</style>\n"],"sourceRoot":"src/components"}]}